// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// covExp
Eigen::MatrixXd covExp(const Eigen::MatrixXd DTR, double theta);
RcppExport SEXP stdf_covExp(SEXP DTRSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type DTR(DTRSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    __result = Rcpp::wrap(covExp(DTR, theta));
    return __result;
END_RCPP
}
// covGauss
Eigen::MatrixXd covGauss(const Eigen::MatrixXd DTR, double theta);
RcppExport SEXP stdf_covGauss(SEXP DTRSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type DTR(DTRSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    __result = Rcpp::wrap(covGauss(DTR, theta));
    return __result;
END_RCPP
}
// covMat
Eigen::MatrixXd covMat(const Eigen::MatrixXd DTR, double theta, double nu);
RcppExport SEXP stdf_covMat(SEXP DTRSEXP, SEXP thetaSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type DTR(DTRSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    __result = Rcpp::wrap(covMat(DTR, theta, nu));
    return __result;
END_RCPP
}
// dlogProfileCpp
Eigen::VectorXd dlogProfileCpp(const Eigen::VectorXd theta, const Eigen::MatrixXd DTR, const Eigen::VectorXd Y, const Eigen::MatrixXd XTR, const Eigen::VectorXd subsetStatic, const Eigen::MatrixXd PhiTime, const Eigen::VectorXd LambEst, const double nu);
RcppExport SEXP stdf_dlogProfileCpp(SEXP thetaSEXP, SEXP DTRSEXP, SEXP YSEXP, SEXP XTRSEXP, SEXP subsetStaticSEXP, SEXP PhiTimeSEXP, SEXP LambEstSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type DTR(DTRSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type XTR(XTRSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type subsetStatic(subsetStaticSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type PhiTime(PhiTimeSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type LambEst(LambEstSEXP);
    Rcpp::traits::input_parameter< const double >::type nu(nuSEXP);
    __result = Rcpp::wrap(dlogProfileCpp(theta, DTR, Y, XTR, subsetStatic, PhiTime, LambEst, nu));
    return __result;
END_RCPP
}
// dlogProfileCppH
Eigen::VectorXd dlogProfileCppH(const Eigen::VectorXd theta, const Eigen::MatrixXd DTR, const Eigen::VectorXd Y, const Eigen::MatrixXd XTR, const Eigen::MatrixXd PhiTime, const Eigen::VectorXd LambEst, const double nu);
RcppExport SEXP stdf_dlogProfileCppH(SEXP thetaSEXP, SEXP DTRSEXP, SEXP YSEXP, SEXP XTRSEXP, SEXP PhiTimeSEXP, SEXP LambEstSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type DTR(DTRSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type XTR(XTRSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type PhiTime(PhiTimeSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type LambEst(LambEstSEXP);
    Rcpp::traits::input_parameter< const double >::type nu(nuSEXP);
    __result = Rcpp::wrap(dlogProfileCppH(theta, DTR, Y, XTR, PhiTime, LambEst, nu));
    return __result;
END_RCPP
}
// logProfileCpp
double logProfileCpp(const Eigen::VectorXd theta, const Eigen::MatrixXd DTR, const Eigen::VectorXd Y, const Eigen::MatrixXd XTR, const Eigen::VectorXd subsetStatic, const Eigen::MatrixXd PhiTime, const Eigen::VectorXd LambEst, const double nu);
RcppExport SEXP stdf_logProfileCpp(SEXP thetaSEXP, SEXP DTRSEXP, SEXP YSEXP, SEXP XTRSEXP, SEXP subsetStaticSEXP, SEXP PhiTimeSEXP, SEXP LambEstSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type DTR(DTRSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type XTR(XTRSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type subsetStatic(subsetStaticSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type PhiTime(PhiTimeSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type LambEst(LambEstSEXP);
    Rcpp::traits::input_parameter< const double >::type nu(nuSEXP);
    __result = Rcpp::wrap(logProfileCpp(theta, DTR, Y, XTR, subsetStatic, PhiTime, LambEst, nu));
    return __result;
END_RCPP
}
// logProfileCppH
double logProfileCppH(const Eigen::VectorXd theta, const Eigen::MatrixXd DTR, const Eigen::VectorXd Y, const Eigen::MatrixXd XTR, const Eigen::MatrixXd PhiTime, const Eigen::VectorXd LambEst, const double nu);
RcppExport SEXP stdf_logProfileCppH(SEXP thetaSEXP, SEXP DTRSEXP, SEXP YSEXP, SEXP XTRSEXP, SEXP PhiTimeSEXP, SEXP LambEstSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type DTR(DTRSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type XTR(XTRSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type PhiTime(PhiTimeSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type LambEst(LambEstSEXP);
    Rcpp::traits::input_parameter< const double >::type nu(nuSEXP);
    __result = Rcpp::wrap(logProfileCppH(theta, DTR, Y, XTR, PhiTime, LambEst, nu));
    return __result;
END_RCPP
}
